архитектура ПО - совокупность важнейших решений об организации программной системы.

архитектура включает:
	выбор структурных элементов и их интерфейсов, с помощью которых составлена система, а также их поведения в рамках взаимодействия структурных элементов
	соединение выбранных элементов структуры и поведение во все более крупные системы
	архитектурный стиль, который направляет всю организацию - все элементы, их интерфейсы, их сотрудничество и их соединение

архитектура ПО - совокупность принятных решений относительно построения программного продукта, 
	которые не будут меняться со временем и именно поэтому данные решения должны быть хорошими.

чистая архитектура - попытка объединить все лучшие идеи других архитектур в единую эффективную схему.

Идеи:
	независимость от фреймворка
	тестируемость
	независимость от UI
	независимость от БД
	независимость от какого-либо внешнего сервиса

Основное правило ЧА (правило зависимости):
	зависимости в исходном коде могут указывать только вовнутрь (фреймворки/драйверы -> интерфейсы-адаптеры -> бизнес-правила приложения -> бизнес-правила предприятия)

	web/БД/UI/внешние интерфейсы/устройства -> контроллеры/шлюзы/представления -> сценарии -> сущности

	представление --|> сценарий выходной порт <I>
			^				    ^
			\			    	|
			 \-------- сценарий исполнитель
				/				|
			   /				-
			  /					v
		контроллер		сценарий входной порт <I>

Пример:
	Слой сущности - Класс заметки.
	Слой сценарий -	Создание, удаление, редактирование заметки; Нет привязки к конкретной БД, есть интерфейс.
	Слой интерфейс-адаптеры - Контроллеры Web API, работа с БД, работа с аутентификацией.
	Слой фреймворки и драйверы - БД, клиентское приложение.

Нет правила, что слоя должно быть именно 4, может быть и больше.


Уровни приложения: Core (Domain(интерпрайс логика и типы) -> Application(бизнес логика и типы)) -> Infrastracture(общение с БД) и Presentation(Web API)

